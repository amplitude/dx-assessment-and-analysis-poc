name: Publish Packages to Github Registry

on:
  workflow_dispatch:
    inputs:
      warning:
        type: boolean
        description: "WARNING - Doing a release while other Github actions are running can cause errors. Make sure no other actions are running before continuing. https://github.com/lerna/lerna/issues/3115"
        required: true
        default: true
      releaseType:
        type: choice
        description: "Release type. Select 'production-release' to do an actual release."
        required: true
        options:
          - dry-run
          - production-release
        default: "dry-run"
      versionType:
        type: choice
        description: Version Type
        options:
          - conventional-commits
          - patch
          - minor
          - major
      versionExplicit:
        description: "Exact version (e.g. '1.0.1', '1.2.3'). If set, this will override versionType."

env:
  DRY_RUN: ${{ github.event.inputs.releaseType == 'dry-run' }}

jobs:
  authorize:
    name: Authorize
    runs-on: ubuntu-latest
    steps:
      - name: ${{ github.actor }} permission check to do a release
        uses: "lannonbr/repo-permission-check-action@2.0.2"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    env:
      LERNA_PACKAGE_VERSION: ''

    steps:
      - uses: actions/checkout@v3

      - name: Set version by type
        if: ${{ github.event.inputs.versionType != 'conventional-commits' }}
        run: |
          echo "LERNA_PACKAGE_VERSION=${{ github.event.inputs.versionType }}" >> $GITHUB_ENV

      - name: Set version explicitly
        if: ${{ github.event.inputs.versionExplicit != null }}
        run: |
          echo "LERNA_PACKAGE_VERSION=${{ github.event.inputs.versionExplicit }}" >> $GITHUB_ENV

      - name: Version=${{ env.LERNA_PACKAGE_VERSION }} Dry-run=${{ env.DRY_RUN }}
        run: |
          echo "${{ env.LERNA_PACKAGE_VERSION }}"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Set registry url
        uses: actions/setup-node@v3
        with:
          registry-url: 'https://npm.pkg.github.com'

      - name: Release (Dry Run)
        if: ${{ env.DRY_RUN == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn lerna version ${{ env.LERNA_PACKAGE_VERSION }} --no-push --no-git-tag-version --loglevel silly --yes

      - name: Configure Git User
        if: ${{ env.DRY_RUN == 'false' }}
        run: |
          git config --global user.name amplitude-sdk-bot
          git config --global user.email amplitude-sdk-bot@users.noreply.github.com

      - name: Release (Github Registry)
        if: ${{ env.DRY_RUN == 'false' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn lerna publish ${{ env.LERNA_PACKAGE_VERSION }} --yes --loglevel silly
